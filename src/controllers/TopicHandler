var amqp = require('amqplib/callback_api');
var mongodb = require('./../../config/mongo.db');
var Shipping = require('./../../model/shipping.model');
var Account = require('./../../model/account.model');

exports.listen = function(exchange,topics) {amqp.connect('amqp://admin:Welkom1@128.199.61.247', function(error0, connection) {
  if (error0) {
    console.log('error '+error0);
    throw error0;
  }

  connection.createChannel(function(error1, channel) {
    if (error1) {
      console.log('error '+error1);
      throw error1;
    }

    channel.assertExchange(exchange, 'topic', {
      durable: true
    });

    channel.assertQueue('', {
    }, function(error2, q) {
      if (error2) {
        throw error2;
      }
      console.log(' [*] Waiting for logs. To exit press CTRL+C');

      topics.forEach(function(key) {
        channel.bindQueue(q.queue, exchange, key);
      });

      channel.consume(q.queue, function(msg) {

       handleMessage(msg)
       console.log(" [x] %s:'%s'", msg.fields.routingKey, msg.content.toString());
      }, {
        noAck: true
      });
    });

  });
});
}

function handleMessage(msg){
  if(msg.fields.routingKey.includes('order.confirmed')){
    newShipping(msg);
  }
  if(msg.fields.routingKey.includes('account.created')){
    createAccount(msg);
  }
}

function newShipping(msg){
  console.log('received topics: ' + msg.fields.routingKey + ' and '+msg.content.toString());
  var shipping = JSON.parse(msg.content.toString());
  var accountFromShipping;

  Account.findOne({id: shipping.buyer.id})
    .then((account) => {
      accountFromShipping = account;
    })

  var new_shipping = new Shipping({
    id: shipping.id,
    deliveryAddress: accountFromShipping.address,
    status: "OrderConfirmed",
    products: shipping.productsIds
  })
  new_shipping.save(function (error) {
    if(error){
      console.log(error);
    }
  })
}

function createAccount(msg){
  console.log("[Order Service] creating Account: " + msg.content.toString());
  var account = JSON.parse(msg.content.toString());

  console.log(account.address);

  var newAccount = new Account({
    id: account.id,
    name: account.name,
    address: account.address,
    postalcode: account.postalcode,
    city: account.city,
    email: account.email,
    phone: account.phone,
    type: account.type,
  });

  newAccount.save(function(err, task) {
    if (err){
      console.log(err);
    }
  });
}